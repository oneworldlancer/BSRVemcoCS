@* @model BSRVemcoCS.iAppViewModel.AppDevelomentTable1EditViewModel *@
@model List<AppDevelomentTable1EditViewModel>

@* class="accordion-body" *@
<div id="div_PageHTMLContent" style="margin:0px;padding:0px;display:flex;flex-direction:column;">


    <div style="width:100%;margin-left:3px;margin-right:3px;margin-bottom:5px;">
        @* class="m-3" *@     @*fs-6*@
        <span>Risk-Based Quality Assessment based on PAS 9980 Guidance</span>

    </div>



    @foreach (var iRowMaster in Model!)
    {

        <div class="fw-bold p-1" style="width:100%;margin-left:5px;background-color:whitesmoke;">@iRowMaster.TableTitle</div>

        <table class="table table-hover table-bordered" style="margin-top:3px;margin-left:3px;margin-right:3px;width:100%;padding:3px;table-layout:fixed;background-color:white;">
            <thead>
                <tr>
                    <th>@iRowMaster.ColumnDescription</th>
                    <th class="fw-bold text-center" style="width:100px;background-color:whitesmoke;">@iRowMaster.ColumnVeMinus</th>
                    <th class="fw-bold text-center" style="width:100px;background-color:whitesmoke;">@iRowMaster.ColumnNeutral</th>
                    <th class="fw-bold text-center" style="width:100px;background-color:whitesmoke;">@iRowMaster.ColumnVePlus</th>
                    @* <th style="width:150px;">@iRowMaster.ColumnCriterion</th> *@
                    <th class="fw-bold text-center" style="width:50px;background-color:#dde9f5;">@iRowMaster.ColumnScore</th>
                    <th>@iRowMaster.ColumnRiskControlMeasure</th>
                    <th class="fw-bold text-center" style="width:110px;background-color:#dde9f5;">@iRowMaster.ColumnScoreAdjused </th>
                    @* <th class="fw-bold" style="width:50px;">Total</th>*@

                </tr>
            </thead>
            <tbody>
                @*@for (var i = 0; i < Model.PrescriptionList.Count; i++)*@
                @*@for ( var i = 0 ; i < Model.RowContentList.Count! ; i++ )*@
                @foreach (var iRow in iRowMaster.RowContentList!)
                {

                    <tr class="divHighlight" data-bs-toggle="modal" onclick="Popup_LoadForm('@iRow.AppTableTokenID','@iRow.TableTokenID','@iRow.BuildingTokenID','@iRow.InformationTokenID','clmscore_@iRow.InformationTokenID','clmrisk_@iRow.InformationTokenID','@iRow.ColumnRiskOption','@iRow.ColumnRiskText');">
                        <td><strong>@Html.Raw(@iRow.ColumnDescription)</strong></td>

                        <td class="text-center" style="width:100px;background-color:whitesmoke;" data-clmminus="clmminus_@iRow.InformationTokenID">

                            @if (iRow.ColumnRiskOption == "minus")
                            {
                                @Html.Raw(@iRow.ColumnRiskText)
                            }
                        </td>

                        <td class="text-center" style="width:100px;background-color:whitesmoke" data-clmneutral="clmneutral_@iRow.InformationTokenID">
                            @if (iRow.ColumnRiskOption == "neutral")
                            {
                                @Html.Raw(@iRow.ColumnRiskText)
                            }
                        </td>

                        <td class="text-center" style="width:100px;background-color:whitesmoke" data-clmplus="clmplus_@iRow.InformationTokenID">
                            @if (iRow.ColumnRiskOption == "plus")
                            {
                                @Html.Raw(@iRow.ColumnRiskText)
                            }
                        </td>


                        <td class="fw-bold text-center" style="width:50px;background-color:#dde9f5;" data-clmoriginal="clmoriginal_@iRow.InformationTokenID">@iRow.ColumnScoreOriginal</td>

                        @*class="d-inline-block text-truncate" style="max-width: 150px;"*@

                        <td class="text-break" style="max-width: 150px;" data-clmrisk="clmrisk_@iRow.InformationTokenID">
                            @if (iRow.ColumnRiskControlMeasure != "0")
                            {
                                @Html.Raw(@iRow.ColumnRiskControlMeasure)
                            }
                        </td>
                        <td class="fw-bold text-center" style="width:110px;background-color:#dde9f5;" data-clmscore="clmscore_@iRow.InformationTokenID">@iRow.ColumnScoreAdjused</td>


                    </tr>
                }

                @*  <tr style="background-color:#152365;color:white;">
            <td class="fw-bold" colspan="6" style="color:white;">Average score:</td>
            <td class="fw-bold text-center" data-clmtotal="clmtotal" style="color:white;">@Model.ColumnScoreAverage</td>
            </tr> *@


            </tbody>
        </table>




    }


</div>


@*POPUP*@
<div class="modal fade" id="popupModalEditor">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header" style="background-color:whitesmoke;">
                <h4 class="modal-title">Risk Assesment</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body">



                <div id="popup_FormContent">
                    @* @await Component.InvokeAsync("Editor")*@

                    <div class="ms-3 me-3 mb-3">
                        <label class="form-label">Risk:</label>

                        <div class="col-12" style="display:flex;flex-direction:row;justify-content:space-between;">

                            @*                               *@
                            <select id="iSelectScoreList" name="iSelectScoreList" class="form-select form-select-sm me-3"
                                    style="width:200px;" required>
                                <option tabindex="-1" value="" selected data-default default disabled hidden>-- Select one --</option>
                                <option tabindex="0" value="minus">-ve (5)</option>
                                <option tabindex="1" value="neutral">Neutral (3)</option>
                                <option tabindex="2" value="plus">+ve (1)</option>
                            </select>

                            <input class="form-control form-control-sm"
                                   type="text" id="iSelectScoreText" name="iSelectScoreText" required>

                        </div>

                    </div>



                    <div class="ms-3 me-3 mb-3">
                        <label class="form-label">Adjusted Score:</label>
                        <input class="form-control form-control-sm"
                               type="number" id="iScoreAdjusted" name="iScoreAdjusted" min="1" max="5">

                    </div>

                    <div class="ms-3 me-3 mb-3">
                        <label class="form-label">Risk Control Measure:</label>
                        <textarea id="txt_HTMLContent" name="txt_HTMLContent" style="width:100%;height:auto;" rows="20" class="form-control">
                                        default
                                    </textarea>

                    </div>

                    @*@Model.PageHTMLContent*@



                    @* <div id="txt_HTMLContent" style="height:200px;"></div>*@


                </div>



            </div>
            <div class="modal-footer">
                <div style="width:100%;display:flex;flex-direction:row;justify-content:space-between;">
                    <button type="button" class="btn btn-primary flex-start"
                            onclick="Popup_PostForm( );">



                        Submit
                    </button>

                    <button type="button" class="btn btn-secondary flex-end" data-bs-dismiss="modal">Close</button>


                </div>
            </div>
        </div>
    </div>
</div>



<script>



    // window.apptbltknid;
    // window.tbltknid;
    // window.bldtknid;
    // window.inftknid;
    // window.clmscore;
    // window.clmrisk;

    function Popup_PostForm() {

        try {

            //iSelectScoreText
            // $("#iSelectScoreList").val("minus");


            var selectVal = $("#iSelectScoreList option:selected").val();

            if (selectVal != "") {
                window.clmriskoption = selectVal;
                // alert('Popup_PostForm == ' + $("#iSelectScoreList option:selected").val());
            } else {
                // alert('Popup_PostForm == EMPTY');
                window.clmriskoption = "0";
                selectVal = "0";
            }

            // selectEl.value = 'sugar';
            //alert('inftknid == ' + window.inftknid);

            var inftknid = window.inftknid;

            var clmn_Original = $("[data-clmoriginal='clmoriginal_" + inftknid + "']");
            var clmn_Minus = $("[data-clmminus='clmminus_" + inftknid + "']");
            var clmn_Neutral = $("[data-clmneutral='clmneutral_" + inftknid + "']");
            var clmn_Plus = $("[data-clmplus='clmplus_" + inftknid + "']");



            var clmn_Score = $("[data-clmscore='clmscore_" + inftknid + "']");
            var clmn_RiskMeasure = $("[data-clmrisk='clmrisk_" + inftknid + "']");
            var clmn_Total = $("[data-clmtotal='clmtotal']");

            var txt_RiskControlMeasure = '0';
            var visible_RiskControlMeasure = '0';

            if (editor.getData() == '') {
                txt_RiskControlMeasure = "0";
                visible_RiskControlMeasure = "";
            }
            else {
                txt_RiskControlMeasure = editor.getData();
                visible_RiskControlMeasure = editor.getData();

            }

            var iScoreAdjusted = document.getElementById('iScoreAdjusted');

            var iSelectScoreText = document.getElementById('iSelectScoreText');

            var strScoreRiskText = "0";
            var txtScoreRiskText = "0";

            if (iSelectScoreText.value != "") {
                strScoreRiskText = iSelectScoreText.value;
                txtScoreRiskText = iSelectScoreText.value;
                window.clmrisktxt = iSelectScoreText.value;
            }
            else {
                strScoreRiskText = "0";
                txtScoreRiskText = "";
                window.clmrisktxt = "0";
            }

            $.ajax({
                type: "POST",

                url: '/iWebMember/Development/Update_Score_Risk_ByInformationTokenID',

                data: {
                    iAppTableTokenID: apptbltknid,
                    iTableTokenID: tbltknid,
                    iBuildingTokenID: bldtknid,
                    iInformationTokenID: inftknid,
                    iScoreRiskOption: selectVal,
                    iScoreRiskText: strScoreRiskText,
                    iScoreAdjusted: iScoreAdjusted.value,
                    iRiskControlMeasure: txt_RiskControlMeasure
                },
                success: function (result) {

                    clmn_Score.html(iScoreAdjusted.value);
                    clmn_RiskMeasure.html(visible_RiskControlMeasure);
                    clmn_Total.html(result.total);

                    //alert("selectVal == " + selectVal);

                    // alert();

                    if (selectVal == "minus") {

                        clmn_Original.html("5");
                        clmn_Minus.html(txtScoreRiskText);
                        clmn_Neutral.html("");
                        clmn_Plus.html("");
                    }

                    else if (selectVal == "neutral") {

                        clmn_Original.html("3");
                        clmn_Minus.html("");
                        clmn_Neutral.html(txtScoreRiskText);
                        clmn_Plus.html("");

                    }

                    else if (selectVal == "plus") {

                        clmn_Original.html("1");
                        clmn_Minus.html("");
                        clmn_Neutral.html("");
                        clmn_Plus.html(txtScoreRiskText);

                    }


                    BSR_ShowToastMessage('update');



                },
                error: function () {
                    // alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            });




            $('#popupModalEditor').modal('hide');







            //////$.ajax({
            //////    url: "/iWebMember/Development/GetImage",
            //////    type: 'POST',
            //////    //dataType: 'json',
            //////    data: { divhtml: $("#div_diagram").html() },
            //////    success: function (data) { }
            //////});










            //////   // var divTestMe = document.getElementById('divTestMe');
            //////var divTestMe = document.getElementById('txt_HTMLContent');

            ////// //   alert(divTestMe.innerHTML);
            //////    alert(divTestMe.textContent);

            //////    //jQuery.noConflict();
            //////    //$('#popupModalEditor').modal('show');

        }

        catch (ex) {
            // alert(ex);

        }
    }



    function Popup_LoadForm(apptbltknid, tbltknid, bldtknid, inftknid, clmscore, clmrisk, clmriskoption, clmrisktxt) {

        try {

            //alert('popup form here == ' + apptbltknid + " , " + tbltknid + " , " + bldtknid + " , " + inftknid + " , " + clmscore + " , " + clmrisk);



            window.apptbltknid = apptbltknid;
            window.tbltknid = tbltknid;
            window.bldtknid = bldtknid;
            window.inftknid = inftknid;
            window.clmscore = clmscore;
            window.clmrisk = clmrisk;

            window.clmriskoption = clmriskoption;
            window.clmrisktxt = clmrisktxt;

            // var clmn_Original = $("[data-clmoriginal='clmoriginal_" + inftknid + "']");
            // var clmn_Minus = $("[data-clmminus='clmminus_" + inftknid + "']");
            // var clmn_Neutral = $("[data-clmneutral='clmneutral_" + inftknid + "']");
            // var clmn_Plus = $("[data-clmplus='clmplus_" + inftknid + "']");


            var clmn_Score = $("[data-clmscore='clmscore_" + inftknid + "']");
            var clmn_RiskMeasure = $("[data-clmrisk='clmrisk_" + inftknid + "']");

            var txt_RiskControlMeasure = '0';


            if (editor.getData() == '') {
                txt_RiskControlMeasure = "0";
            }
            else {
                txt_RiskControlMeasure = editor.getData();
            }


            if (clmriskoption == "minus") {
                $("#iSelectScoreList").val("minus");
            }
            else if (clmriskoption == "neutral") {
                $("#iSelectScoreList").val("neutral");
            }
            else if (clmriskoption == "plus") {
                $("#iSelectScoreList").val("plus");
            } else {
                $("#iSelectScoreList").val("");
            }

            //var iSelectScoreText = document.getElementById('iSelectScoreText');

            if (clmrisktxt != "0") {
                $("#iSelectScoreText").val(clmrisktxt);
            } else {
                $("#iSelectScoreText").val("");
            }



            //////if (editor.getData() == '') {
            //////    txt_RiskControlMeasure = "0";
            //////}
            //////else {
            //////    txt_RiskControlMeasure = editor.getData();

            //////}

            ////////alert(clmn_Score.html());

            //
            //
            //   alert($("[data-clmnscore='clmscore_1689793069675']").html());



            //var divTestMe = document.getElementById('txt_HTMLContent');
            var iScoreAdjusted = document.getElementById('iScoreAdjusted');

            //  iScoreAdjusted.value = '3';
            iScoreAdjusted.value = clmn_Score.html();

            editor.setData(clmn_RiskMeasure.html());


            //var txt_HTMLContent = document.getElementById('txt_HTMLContent');
            // txt_HTMLContent.value = 'txt_HTMLContent 333';

            //alert(divTestMe.innerHTML);
            //  alert(divTestMe.textContent);
            // alert('updatd popup value == ' + bldtknid);

            //  var editorData =  ClassicEditor.instances[ 'txt_HTMLContent' ];

            //  CKEDITOR.ClassicEditor.instances[ 'txt_HTMLContent' ].setData('txt_HTMLContent 333');



            //  alert(editorData);



            $('#popupModalEditor').modal('show');



        }

        catch (ex) {
            //  alert(ex);
            console.log(ex);
        }
    }






</script>
